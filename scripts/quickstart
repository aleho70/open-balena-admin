#!/bin/bash -e

BOLD=`tput bold`
RESET=`tput sgr0`

DIR="$(dirname "$0")"
BASE_DIR="${DIR}/.."
CONFIG_DIR="${BASE_DIR}/config"

DOMAIN=openbalena.local
DB_USER=docker
DB_PASSWORD=docker
DB_PORT=5432
HOST_MODE=secure

usage() {
  echo "usage: $0 [-h] [-d DOMAIN] [-U USERNAME] [-P PASSWORD] [-p PORT] -v VERSION -j JWT_SECRET"
  echo
  echo "  -d DOMAIN        the domain that your openbalena instance was installed on. Default is 'openbalena.local'"
  echo "  -U USERNAME      the username used to log in to your openbalena db instance.  Default is 'docker'"
  echo "  -P PASSWORD      the password used to log in to your openbalena db instance.  Default is 'docker'"
  echo "  -p PORT          the port of your openbalena db instance.  Default is '5432'"
  echo "  -i               insecure host mode (open-balena-admin services available via http instead of https)  Default is secure"
  echo "  -v VERSION       the version tag of your openbalena api instance"
  echo "  -j JWT_SECRET    the JWT secret of your openbalena instance"
  echo "  -a S3_ACCESS_KEY the S3 access key of your openbalena instance"
  echo "  -s S3_SECRET_KEY the S3 secret key of your openbalena instance"
  echo
}

show_help=false
while getopts ":hxdUPpi:v:j:a:s:" opt; do
  case "${opt}" in
    h) show_help=true;;
    x) set -x;;
    d) DOMAIN="${OPTARG}";;
    U) DB_USER="${OPTARG}";;
    P) DB_PASSWORD="${OPTARG}";;
    p) DB_PORT="${OPTARG}";;
    i) HOST_MODE="insecure";;
    v) VERSION="${OPTARG}";;
    j) JWT_SECRET="${OPTARG}";;
    a) S3_ACCESS_KEY="${OPTARG}";;
    s) S3_SECRET_KEY="${OPTARG}";;
    *)
      echo "Invalid argument: -${OPTARG}"
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))

if [ -z "${VERSION}" ] || [ -z "${JWT_SECRET}" ]|| [ -z "${S3_ACCESS_KEY}" ]|| [ -z "${S3_SECRET_KEY}" ]; then
  usage
  exit 1
fi

if [ "$show_help" = "true" ]; then
  usage
  exit 1
fi

echo_bold() {
  echo "${BOLD}${@}${RESET}"
}

echo_bold "==> Creating new configuration at: $CONFIG_DIR"
mkdir -p "$CONFIG_DIR"

echo_bold "==> Setting up environment..."
if cat >"${CONFIG_DIR}/activate.out" <(source "${DIR}/make-env"); then
    mv "${CONFIG_DIR}/activate.out" "${CONFIG_DIR}/activate"
else
    exit 1
fi

echo_bold "==> Adding default compose file..."
cp "${BASE_DIR}/compose/template.yml" "${CONFIG_DIR}/docker-compose.yml"
